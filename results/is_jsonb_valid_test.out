CREATE EXTENSION is_jsonb_valid;
SELECT is_jsonb_valid('{}', '{}');
 is_jsonb_valid 
----------------
 t
(1 row)

SELECT is_jsonb_valid('{"type": "object"}', '{}');
INFO:  Type is correct
 is_jsonb_valid 
----------------
 t
(1 row)

SELECT is_jsonb_valid('{"type": "object"}', '2');
INFO:  Type is not correct
 is_jsonb_valid 
----------------
 f
(1 row)

SELECT is_jsonb_valid('{"type": "object"}', '{"a": 1}');
INFO:  Type is correct
 is_jsonb_valid 
----------------
 t
(1 row)

SELECT is_jsonb_valid('{"type": "number"}', '2');
INFO:  Type is correct
 is_jsonb_valid 
----------------
 t
(1 row)

SELECT is_jsonb_valid('{"type": "integer"}', '2');
INFO:  Type is correct
 is_jsonb_valid 
----------------
 t
(1 row)

SELECT is_jsonb_valid('{"anyOf": [{"type": "number"}, {"type": "integer"}]}', '2');
INFO:  Type is correct
 is_jsonb_valid 
----------------
 t
(1 row)

SELECT is_jsonb_valid('{"allOf": [{"type": "number"}, {"type": "integer"}]}', '2');
INFO:  Type is correct
INFO:  Type is correct
 is_jsonb_valid 
----------------
 t
(1 row)

SELECT is_jsonb_valid('{"oneOf": [{"type": "number"}, {"type": "integer"}]}', '2');
INFO:  Type is correct
INFO:  Type is correct
 is_jsonb_valid 
----------------
 f
(1 row)

SELECT is_jsonb_valid('{"minimum": 3}', '2');
INFO:  Value is not bigger than minimum
 is_jsonb_valid 
----------------
 f
(1 row)

SELECT is_jsonb_valid('{"minimum": 1}', '2');
 is_jsonb_valid 
----------------
 t
(1 row)

select is_jsonb_valid('{"uniqueItems": true}', '[1, 2, 3]');
 is_jsonb_valid 
----------------
 t
(1 row)

select is_jsonb_valid('{"uniqueItems": false}', '[1, 2, 2]');
 is_jsonb_valid 
----------------
 t
(1 row)

select is_jsonb_valid('{"uniqueItems": true}', '[1, 2, 2]');
 is_jsonb_valid 
----------------
 f
(1 row)

select is_jsonb_valid('{"uniqueItems": true}', '[1, {"a": {"b": 1}}, {"a": {"b": 1}}]');
 is_jsonb_valid 
----------------
 f
(1 row)

select is_jsonb_valid('{"uniqueItems": true}', '[1, {"a": {"b": 1}}, {"a": {"b": 2}}]');
 is_jsonb_valid 
----------------
 t
(1 row)

SELECT is_jsonb_valid('{"minimum": 2}', '2');
 is_jsonb_valid 
----------------
 t
(1 row)

SELECT is_jsonb_valid('{"minimum": 2, "exclusiveMinimum": true}', '2');
INFO:  Value is not strictly bigger than minimum
 is_jsonb_valid 
----------------
 f
(1 row)

SELECT is_jsonb_valid('{"maximum": 3}', '2');
 is_jsonb_valid 
----------------
 t
(1 row)

SELECT is_jsonb_valid('{"maximum": 1}', '2');
INFO:  Value is not smaller than maximum
 is_jsonb_valid 
----------------
 f
(1 row)

SELECT is_jsonb_valid('{"maximum": 2}', '2');
 is_jsonb_valid 
----------------
 t
(1 row)

SELECT is_jsonb_valid('{"maximum": 2, "exclusiveMaximum": true}', '2');
INFO:  Value is not strictly smaller than maximum
 is_jsonb_valid 
----------------
 f
(1 row)

SELECT is_jsonb_valid('{"type": "integer"}', '2');
INFO:  Type is correct
 is_jsonb_valid 
----------------
 t
(1 row)

SELECT is_jsonb_valid('{"type": "integer"}', '2.5');
INFO:  Type is not correct
 is_jsonb_valid 
----------------
 f
(1 row)

SELECT is_jsonb_valid('{"properties": {}}', '2.5');
INFO:  There are properties to check
 is_jsonb_valid 
----------------
 t
(1 row)

SELECT is_jsonb_valid('{"properties": {"a": {"type": "null"}}}', '{"a": 1}');
INFO:  There are properties to check
INFO:  Type is not correct
INFO:  Property is not valid
 is_jsonb_valid 
----------------
 f
(1 row)

SELECT is_jsonb_valid('{"properties": {"a": {"type": "number"}}}', '{"a": 2.5}');
INFO:  There are properties to check
INFO:  Type is correct
INFO:  Property is valid
 is_jsonb_valid 
----------------
 t
(1 row)

SELECT is_jsonb_valid('{"properties": {"a": {"type": "integer"}}}', '{"a": 2}');
INFO:  There are properties to check
INFO:  Type is correct
INFO:  Property is valid
 is_jsonb_valid 
----------------
 t
(1 row)

SELECT is_jsonb_valid('{"properties": {"a": {"type": "integer"}}}', '{"a": 2.5}');
INFO:  There are properties to check
INFO:  Type is not correct
INFO:  Property is not valid
 is_jsonb_valid 
----------------
 f
(1 row)

--- property is compared with length of key, in this case 4
SELECT is_jsonb_valid('{"properties": {"a": {"type": "inte"}}}', '{"a": 2}');
INFO:  There are properties to check
INFO:  Type is correct
INFO:  Property is valid
 is_jsonb_valid 
----------------
 t
(1 row)

SELECT is_jsonb_valid('{"properties": {"a": {"required": true}}}', '{}');
INFO:  There are properties to check
INFO:  Property is not valid
 is_jsonb_valid 
----------------
 f
(1 row)

SELECT is_jsonb_valid('{"properties": {"a": {"required": false}}}', '{}');
INFO:  There are properties to check
INFO:  Property is valid
 is_jsonb_valid 
----------------
 t
(1 row)

SELECT is_jsonb_valid('{"properties": {"a": {"required": true}}}', '{"a": 1}');
INFO:  There are properties to check
INFO:  Property is valid
 is_jsonb_valid 
----------------
 t
(1 row)

select is_jsonb_valid('{"items": [{"type": "integer"}, {"type": "number"}]}', '[1, 2.5, 3.5]');
INFO:  Type is correct
INFO:  Type is correct
 is_jsonb_valid 
----------------
 t
(1 row)

select is_jsonb_valid('{"items": {"type": "integer"}}', '[1, 2, 3]');
INFO:  Type is correct
INFO:  Item is valid
INFO:  Type is correct
INFO:  Item is valid
INFO:  Type is correct
INFO:  Item is valid
 is_jsonb_valid 
----------------
 t
(1 row)

select is_jsonb_valid('{"items": {"type": "integer"}}', '[1, 2, 3.5]');
INFO:  Type is correct
INFO:  Item is valid
INFO:  Type is correct
INFO:  Item is valid
INFO:  Type is not correct
INFO:  Item is not valid
 is_jsonb_valid 
----------------
 f
(1 row)

select is_jsonb_valid('{"items": [{"type": "integer"}, {"type": "number"}], "additionalItems": false}', '[1, 2.5, 3.5]');
INFO:  Type is correct
INFO:  Type is correct
 is_jsonb_valid 
----------------
 f
(1 row)

select is_jsonb_valid('{"items": [{"type": "integer"}, {"type": "number"}], "additionalItems": {"type": "string"}}', '[1, 2.5, 3.5]');
INFO:  Type is correct
INFO:  Type is correct
INFO:  Type is not correct
 is_jsonb_valid 
----------------
 f
(1 row)

select is_jsonb_valid('{"items": [{"type": "integer"}, {"type": "number"}], "additionalItems": {"type": "number"}}', '[1, 2.5, 3.5]');
INFO:  Type is correct
INFO:  Type is correct
INFO:  Type is correct
 is_jsonb_valid 
----------------
 t
(1 row)

SELECT is_jsonb_valid('{"properties": {"a": {"type": "integer"}}}', '{"b": 1}');
INFO:  There are properties to check
INFO:  Property is valid
 is_jsonb_valid 
----------------
 t
(1 row)

SELECT is_jsonb_valid('{"type": 1}', '2');
ERROR:  Type must be string
--select jsonb_get2('{"a": 2}');
--select jsonb_get2('{"a": {"c": 2}}');
--select jsonb_get2('{"b": 2}');
